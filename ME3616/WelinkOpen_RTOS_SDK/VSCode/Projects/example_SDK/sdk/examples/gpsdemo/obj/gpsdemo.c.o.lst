ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 28,1
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .file "gpsdemo.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.gps_callback,"ax",%progbits
  18              	 .align 1
  19              	 .global gps_callback
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	gps_callback:
  26              	.LFB5:
  27              	 .file 1 "gpsdemo.c"
   1:gpsdemo.c     **** /*
   2:gpsdemo.c     **** ** File   : gpsdemo.c
   3:gpsdemo.c     **** **
   4:gpsdemo.c     **** ** Copyright (C) 2013-2018 Gosuncn. All rights reserved.
   5:gpsdemo.c     **** **
   6:gpsdemo.c     **** ** Licensed under the Apache License, Version 2.0 (the "License");
   7:gpsdemo.c     **** ** you may not use this file except in compliance with the License.
   8:gpsdemo.c     **** ** You may obtain a copy of the License at
   9:gpsdemo.c     **** **
  10:gpsdemo.c     **** **      http://www.apache.org/licenses/LICENSE-2.0
  11:gpsdemo.c     **** **
  12:gpsdemo.c     **** ** Unless required by applicable law or agreed to in writing, software
  13:gpsdemo.c     **** ** distributed under the License is distributed on an "AS IS" BASIS,
  14:gpsdemo.c     **** ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:gpsdemo.c     **** ** See the License for the specific language governing permissions and
  16:gpsdemo.c     **** ** limitations under the License.
  17:gpsdemo.c     **** **
  18:gpsdemo.c     **** ** Author : liyong2@gosuncn.cn
  19:gpsdemo.c     **** **
  20:gpsdemo.c     **** **  $Date: 2018/05/25 15:00:36GMT+08:00 $
  21:gpsdemo.c     **** **
  22:gpsdemo.c     **** **
  23:gpsdemo.c     **** **
  24:gpsdemo.c     **** **
  25:gpsdemo.c     **** **
  26:gpsdemo.c     **** */
  27:gpsdemo.c     **** #include <stdio.h>
  28:gpsdemo.c     **** #include <stdlib.h>
  29:gpsdemo.c     **** #include <string.h>
  30:gpsdemo.c     **** #include "gsdk_api.h"
  31:gpsdemo.c     **** #include "FreeRTOS.h"
ARM GAS   			page 2


  32:gpsdemo.c     **** #include "gsdk_ril.h"
  33:gpsdemo.c     **** #include "semphr.h"
  34:gpsdemo.c     **** #include "timers.h"
  35:gpsdemo.c     **** #include "task.h"
  36:gpsdemo.c     **** 
  37:gpsdemo.c     **** #define ONE_SEC 100
  38:gpsdemo.c     **** #define GET_GPS_PERIOD 20
  39:gpsdemo.c     **** 
  40:gpsdemo.c     **** static gsdk_handle_t g_huart;
  41:gpsdemo.c     **** xTimerHandle xTimerHandle1;
  42:gpsdemo.c     **** 
  43:gpsdemo.c     **** int __io_puts(char *data, int len)
  44:gpsdemo.c     **** {
  45:gpsdemo.c     ****     int ret = 0;
  46:gpsdemo.c     ****     if (g_huart) {
  47:gpsdemo.c     ****         ret = gsdk_uart_write(g_huart, (uint8_t *)data, len, 1000);
  48:gpsdemo.c     ****     }
  49:gpsdemo.c     ****     return ret;
  50:gpsdemo.c     **** }
  51:gpsdemo.c     **** 
  52:gpsdemo.c     **** int log_init(void)
  53:gpsdemo.c     **** {
  54:gpsdemo.c     ****     uart_config_t uart_config;
  55:gpsdemo.c     ****     gsdk_status_t status;
  56:gpsdemo.c     **** 
  57:gpsdemo.c     ****     uart_config.baudrate    = UART_BAUDRATE_115200;
  58:gpsdemo.c     ****     uart_config.parity      = UART_PARITY_NONE;
  59:gpsdemo.c     ****     uart_config.stop_bit    = UART_STOP_BIT_1;
  60:gpsdemo.c     ****     uart_config.word_length = UART_WORD_LENGTH_8;
  61:gpsdemo.c     **** 
  62:gpsdemo.c     ****     status = gsdk_uart_open(UART_0, &uart_config, &g_huart);
  63:gpsdemo.c     ****     if (status != GSDK_SUCCESS) {
  64:gpsdemo.c     ****         gsdk_syslog_printf("[OEM_DEMO]: failed to open uart %d\n\r", status);
  65:gpsdemo.c     ****         return -1;
  66:gpsdemo.c     ****     }
  67:gpsdemo.c     **** 
  68:gpsdemo.c     ****     printf("[OEM_DEMO] log init....OK\n\r");
  69:gpsdemo.c     **** 
  70:gpsdemo.c     ****     return 0;
  71:gpsdemo.c     **** }
  72:gpsdemo.c     **** 
  73:gpsdemo.c     **** int gps_callback(const char *s, const char *extra, int len, void *user_data)
  74:gpsdemo.c     **** {
  28              	 .loc 1 74 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 08B5     	 push {r3,lr}
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 3,-8
  36              	 .cfi_offset 14,-4
  75:gpsdemo.c     ****     printf("[GPS_INFO] gps_info received: %s\n\r", s);
  37              	 .loc 1 75 0
  38 0002 0146     	 mov r1,r0
  39              	.LVL1:
  40 0004 0248     	 ldr r0,.L3
ARM GAS   			page 3


  41              	.LVL2:
  42 0006 FFF7FEFF 	 bl printf
  43              	.LVL3:
  76:gpsdemo.c     **** 	return GSDK_AT_UNSOLICITED_HANDLED;
  77:gpsdemo.c     **** }
  44              	 .loc 1 77 0
  45 000a 0120     	 movs r0,#1
  46 000c 08BD     	 pop {r3,pc}
  47              	.L4:
  48 000e 00BF     	 .align 2
  49              	.L3:
  50 0010 00000000 	 .word .LC0
  51              	 .cfi_endproc
  52              	.LFE5:
  54              	 .section .text.vTimerCallback1,"ax",%progbits
  55              	 .align 1
  56              	 .global vTimerCallback1
  57              	 .syntax unified
  58              	 .thumb
  59              	 .thumb_func
  60              	 .fpu fpv4-sp-d16
  62              	vTimerCallback1:
  63              	.LFB6:
  78:gpsdemo.c     **** 
  79:gpsdemo.c     **** void vTimerCallback1()
  80:gpsdemo.c     **** {
  64              	 .loc 1 80 0
  65              	 .cfi_startproc
  66              	 
  67              	 
  68 0000 08B5     	 push {r3,lr}
  69              	 .cfi_def_cfa_offset 8
  70              	 .cfi_offset 3,-8
  71              	 .cfi_offset 14,-4
  81:gpsdemo.c     ****     printf("TimerCallback1 triggered !\n\r");
  72              	 .loc 1 81 0
  73 0002 0348     	 ldr r0,.L7
  74 0004 FFF7FEFF 	 bl printf
  75              	.LVL4:
  82:gpsdemo.c     ****     gsdk_ril_get_gps();
  76              	 .loc 1 82 0
  77 0008 FFF7FEFF 	 bl gsdk_ril_get_gps
  78              	.LVL5:
  83:gpsdemo.c     **** }
  79              	 .loc 1 83 0
  80 000c 08BD     	 pop {r3,pc}
  81              	.L8:
  82 000e 00BF     	 .align 2
  83              	.L7:
  84 0010 00000000 	 .word .LC1
  85              	 .cfi_endproc
  86              	.LFE6:
  88              	 .section .text.__io_puts,"ax",%progbits
  89              	 .align 1
  90              	 .global __io_puts
  91              	 .syntax unified
  92              	 .thumb
ARM GAS   			page 4


  93              	 .thumb_func
  94              	 .fpu fpv4-sp-d16
  96              	__io_puts:
  97              	.LFB3:
  44:gpsdemo.c     ****     int ret = 0;
  98              	 .loc 1 44 0
  99              	 .cfi_startproc
 100              	 
 101              	 
 102              	.LVL6:
 103 0000 10B5     	 push {r4,lr}
 104              	 .cfi_def_cfa_offset 8
 105              	 .cfi_offset 4,-8
 106              	 .cfi_offset 14,-4
 107              	.LVL7:
  46:gpsdemo.c     ****         ret = gsdk_uart_write(g_huart, (uint8_t *)data, len, 1000);
 108              	 .loc 1 46 0
 109 0002 064B     	 ldr r3,.L13
 110 0004 1C68     	 ldr r4,[r3]
 111 0006 3CB1     	 cbz r4,.L11
 112 0008 0A46     	 mov r2,r1
 113 000a 0146     	 mov r1,r0
 114              	.LVL8:
  47:gpsdemo.c     ****     }
 115              	 .loc 1 47 0
 116 000c 4FF47A73 	 mov r3,#1000
 117 0010 2046     	 mov r0,r4
 118              	.LVL9:
 119 0012 FFF7FEFF 	 bl gsdk_uart_write
 120              	.LVL10:
 121              	.L9:
  50:gpsdemo.c     **** 
 122              	 .loc 1 50 0
 123 0016 10BD     	 pop {r4,pc}
 124              	.LVL11:
 125              	.L11:
  45:gpsdemo.c     ****     if (g_huart) {
 126              	 .loc 1 45 0
 127 0018 0020     	 movs r0,#0
 128              	.LVL12:
  49:gpsdemo.c     **** }
 129              	 .loc 1 49 0
 130 001a FCE7     	 b .L9
 131              	.L14:
 132              	 .align 2
 133              	.L13:
 134 001c 00000000 	 .word .LANCHOR0
 135              	 .cfi_endproc
 136              	.LFE3:
 138              	 .section .text.log_init,"ax",%progbits
 139              	 .align 1
 140              	 .global log_init
 141              	 .syntax unified
 142              	 .thumb
 143              	 .thumb_func
 144              	 .fpu fpv4-sp-d16
 146              	log_init:
ARM GAS   			page 5


 147              	.LFB4:
  53:gpsdemo.c     ****     uart_config_t uart_config;
 148              	 .loc 1 53 0
 149              	 .cfi_startproc
 150              	 
 151              	 
 152 0000 00B5     	 push {lr}
 153              	 .cfi_def_cfa_offset 4
 154              	 .cfi_offset 14,-4
 155 0002 83B0     	 sub sp,sp,#12
 156              	 .cfi_def_cfa_offset 16
  57:gpsdemo.c     ****     uart_config.parity      = UART_PARITY_NONE;
 157              	 .loc 1 57 0
 158 0004 0923     	 movs r3,#9
 159 0006 8DF80430 	 strb r3,[sp,#4]
  58:gpsdemo.c     ****     uart_config.stop_bit    = UART_STOP_BIT_1;
 160              	 .loc 1 58 0
 161 000a 0020     	 movs r0,#0
 162 000c 8DF80700 	 strb r0,[sp,#7]
  59:gpsdemo.c     ****     uart_config.word_length = UART_WORD_LENGTH_8;
 163              	 .loc 1 59 0
 164 0010 8DF80600 	 strb r0,[sp,#6]
  60:gpsdemo.c     **** 
 165              	 .loc 1 60 0
 166 0014 0323     	 movs r3,#3
 167 0016 8DF80530 	 strb r3,[sp,#5]
  62:gpsdemo.c     ****     if (status != GSDK_SUCCESS) {
 168              	 .loc 1 62 0
 169 001a 094A     	 ldr r2,.L20
 170 001c 01A9     	 add r1,sp,#4
 171 001e FFF7FEFF 	 bl gsdk_uart_open
 172              	.LVL13:
  63:gpsdemo.c     ****         gsdk_syslog_printf("[OEM_DEMO]: failed to open uart %d\n\r", status);
 173              	 .loc 1 63 0
 174 0022 30B9     	 cbnz r0,.L19
  68:gpsdemo.c     **** 
 175              	 .loc 1 68 0
 176 0024 0748     	 ldr r0,.L20+4
 177              	.LVL14:
 178 0026 FFF7FEFF 	 bl printf
 179              	.LVL15:
  70:gpsdemo.c     **** }
 180              	 .loc 1 70 0
 181 002a 0020     	 movs r0,#0
 182              	.L15:
  71:gpsdemo.c     **** 
 183              	 .loc 1 71 0
 184 002c 03B0     	 add sp,sp,#12
 185              	 .cfi_remember_state
 186              	 .cfi_def_cfa_offset 4
 187              	 
 188 002e 5DF804FB 	 ldr pc,[sp],#4
 189              	.LVL16:
 190              	.L19:
 191              	 .cfi_restore_state
 192 0032 0146     	 mov r1,r0
  64:gpsdemo.c     ****         return -1;
ARM GAS   			page 6


 193              	 .loc 1 64 0
 194 0034 0448     	 ldr r0,.L20+8
 195              	.LVL17:
 196 0036 FFF7FEFF 	 bl gsdk_syslog_printf
 197              	.LVL18:
  65:gpsdemo.c     ****     }
 198              	 .loc 1 65 0
 199 003a 4FF0FF30 	 mov r0,#-1
 200 003e F5E7     	 b .L15
 201              	.L21:
 202              	 .align 2
 203              	.L20:
 204 0040 00000000 	 .word .LANCHOR0
 205 0044 28000000 	 .word .LC3
 206 0048 00000000 	 .word .LC2
 207              	 .cfi_endproc
 208              	.LFE4:
 210              	 .section .text.main,"ax",%progbits
 211              	 .align 1
 212              	 .global main
 213              	 .syntax unified
 214              	 .thumb
 215              	 .thumb_func
 216              	 .fpu fpv4-sp-d16
 218              	main:
 219              	.LFB7:
  84:gpsdemo.c     **** 
  85:gpsdemo.c     **** int main()
  86:gpsdemo.c     **** {
 220              	 .loc 1 86 0
 221              	 .cfi_startproc
 222              	 
 223              	 
 224 0000 10B5     	 push {r4,lr}
 225              	 .cfi_def_cfa_offset 8
 226              	 .cfi_offset 4,-8
 227              	 .cfi_offset 14,-4
 228 0002 82B0     	 sub sp,sp,#8
 229              	 .cfi_def_cfa_offset 16
 230              	.LVL19:
  87:gpsdemo.c     ****     gsdk_status_t status = GSDK_SUCCESS;
  88:gpsdemo.c     **** 
  89:gpsdemo.c     ****     log_init();
 231              	 .loc 1 89 0
 232 0004 FFF7FEFF 	 bl log_init
 233              	.LVL20:
  90:gpsdemo.c     **** 
  91:gpsdemo.c     ****     status = gsdk_ril_init();
 234              	 .loc 1 91 0
 235 0008 FFF7FEFF 	 bl gsdk_ril_init
 236              	.LVL21:
  92:gpsdemo.c     ****     if (status != GSDK_SUCCESS) {
 237              	 .loc 1 92 0
 238 000c 20BB     	 cbnz r0,.L28
  93:gpsdemo.c     ****         printf("[OEM_DEMO] AT CMD init failed\n\r");
  94:gpsdemo.c     ****         goto _fail;
  95:gpsdemo.c     ****     }
ARM GAS   			page 7


  96:gpsdemo.c     ****     
  97:gpsdemo.c     **** 	vTaskDelay(ONE_SEC * 2);
 239              	 .loc 1 97 0
 240 000e C820     	 movs r0,#200
 241              	.LVL22:
 242 0010 FFF7FEFF 	 bl vTaskDelay
 243              	.LVL23:
  98:gpsdemo.c     **** 	
  99:gpsdemo.c     ****     status = gsdk_ril_set_gps_operation(2, gps_callback, NULL);
 244              	 .loc 1 99 0
 245 0014 0022     	 movs r2,#0
 246 0016 1749     	 ldr r1,.L31
 247 0018 0220     	 movs r0,#2
 248 001a FFF7FEFF 	 bl gsdk_ril_set_gps_operation
 249              	.LVL24:
 100:gpsdemo.c     ****     if (status != GSDK_SUCCESS) {
 250              	 .loc 1 100 0
 251 001e 08BB     	 cbnz r0,.L29
 101:gpsdemo.c     ****         printf("[OEM_DEMO] Interface ERROR!!!\n");
 102:gpsdemo.c     ****         goto _fail;
 103:gpsdemo.c     ****     }
 104:gpsdemo.c     **** 
 105:gpsdemo.c     ****     xTimerHandle1 = xTimerCreate("Timer1",
 252              	 .loc 1 105 0
 253 0020 154B     	 ldr r3,.L31+4
 254 0022 0093     	 str r3,[sp]
 255 0024 0023     	 movs r3,#0
 256 0026 0122     	 movs r2,#1
 257 0028 4FF4FA61 	 mov r1,#2000
 258 002c 1348     	 ldr r0,.L31+8
 259              	.LVL25:
 260 002e FFF7FEFF 	 bl xTimerCreate
 261              	.LVL26:
 262 0032 0446     	 mov r4,r0
 263 0034 124B     	 ldr r3,.L31+12
 264 0036 1860     	 str r0,[r3]
 106:gpsdemo.c     ****                                  GET_GPS_PERIOD * ONE_SEC,
 107:gpsdemo.c     ****                                  pdTRUE,
 108:gpsdemo.c     ****                                  (void *) 0,
 109:gpsdemo.c     ****                                  (TimerCallbackFunction_t) vTimerCallback1);
 110:gpsdemo.c     **** 
 111:gpsdemo.c     ****     if (pdFAIL == xTimerStart(xTimerHandle1, 500)) {
 265              	 .loc 1 111 0
 266 0038 FFF7FEFF 	 bl xTaskGetTickCount
 267              	.LVL27:
 268 003c 4FF4FA73 	 mov r3,#500
 269 0040 0093     	 str r3,[sp]
 270 0042 0023     	 movs r3,#0
 271 0044 0246     	 mov r2,r0
 272 0046 0121     	 movs r1,#1
 273 0048 2046     	 mov r0,r4
 274 004a FFF7FEFF 	 bl xTimerGenericCommand
 275              	.LVL28:
 276 004e 68B1     	 cbz r0,.L30
 277              	.L26:
 112:gpsdemo.c     ****         printf("start timer 1 failed!");
 113:gpsdemo.c     ****     }
ARM GAS   			page 8


 114:gpsdemo.c     **** 
 115:gpsdemo.c     ****     printf("all initialization finished!\n\r");
 278              	 .loc 1 115 0
 279 0050 0C48     	 ldr r0,.L31+16
 280 0052 FFF7FEFF 	 bl printf
 281              	.LVL29:
 282 0056 02E0     	 b .L24
 283              	.LVL30:
 284              	.L28:
  93:gpsdemo.c     ****         goto _fail;
 285              	 .loc 1 93 0
 286 0058 0B48     	 ldr r0,.L31+20
 287              	.LVL31:
 288 005a FFF7FEFF 	 bl printf
 289              	.LVL32:
 290              	.L24:
 116:gpsdemo.c     **** _fail:
 117:gpsdemo.c     **** 
 118:gpsdemo.c     ****     return 0;
 119:gpsdemo.c     **** }
 291              	 .loc 1 119 0
 292 005e 0020     	 movs r0,#0
 293 0060 02B0     	 add sp,sp,#8
 294              	 .cfi_remember_state
 295              	 .cfi_def_cfa_offset 8
 296              	 
 297 0062 10BD     	 pop {r4,pc}
 298              	.LVL33:
 299              	.L29:
 300              	 .cfi_restore_state
 101:gpsdemo.c     ****         goto _fail;
 301              	 .loc 1 101 0
 302 0064 0948     	 ldr r0,.L31+24
 303              	.LVL34:
 304 0066 FFF7FEFF 	 bl puts
 305              	.LVL35:
 102:gpsdemo.c     ****     }
 306              	 .loc 1 102 0
 307 006a F8E7     	 b .L24
 308              	.L30:
 112:gpsdemo.c     ****     }
 309              	 .loc 1 112 0
 310 006c 0848     	 ldr r0,.L31+28
 311 006e FFF7FEFF 	 bl printf
 312              	.LVL36:
 313 0072 EDE7     	 b .L26
 314              	.L32:
 315              	 .align 2
 316              	.L31:
 317 0074 00000000 	 .word gps_callback
 318 0078 00000000 	 .word vTimerCallback1
 319 007c 40000000 	 .word .LC6
 320 0080 00000000 	 .word .LANCHOR1
 321 0084 60000000 	 .word .LC8
 322 0088 00000000 	 .word .LC4
 323 008c 20000000 	 .word .LC5
 324 0090 48000000 	 .word .LC7
ARM GAS   			page 9


 325              	 .cfi_endproc
 326              	.LFE7:
 328              	 .global xTimerHandle1
 329              	 .section .bss.g_huart,"aw",%nobits
 330              	 .align 2
 331              	 .set .LANCHOR0,.+0
 334              	g_huart:
 335 0000 00000000 	 .space 4
 336              	 .section .bss.xTimerHandle1,"aw",%nobits
 337              	 .align 2
 338              	 .set .LANCHOR1,.+0
 341              	xTimerHandle1:
 342 0000 00000000 	 .space 4
 343              	 .section .rodata.gps_callback.str1.4,"aMS",%progbits,1
 344              	 .align 2
 345              	.LC0:
 346 0000 5B475053 	 .ascii "[GPS_INFO] gps_info received: %s\012\015\000"
 346      5F494E46 
 346      4F5D2067 
 346      70735F69 
 346      6E666F20 
 347              	 .section .rodata.log_init.str1.4,"aMS",%progbits,1
 348              	 .align 2
 349              	.LC2:
 350 0000 5B4F454D 	 .ascii "[OEM_DEMO]: failed to open uart %d\012\015\000"
 350      5F44454D 
 350      4F5D3A20 
 350      6661696C 
 350      65642074 
 351 0025 000000   	 .space 3
 352              	.LC3:
 353 0028 5B4F454D 	 .ascii "[OEM_DEMO] log init....OK\012\015\000"
 353      5F44454D 
 353      4F5D206C 
 353      6F672069 
 353      6E69742E 
 354              	 .section .rodata.main.str1.4,"aMS",%progbits,1
 355              	 .align 2
 356              	.LC4:
 357 0000 5B4F454D 	 .ascii "[OEM_DEMO] AT CMD init failed\012\015\000"
 357      5F44454D 
 357      4F5D2041 
 357      5420434D 
 357      4420696E 
 358              	.LC5:
 359 0020 5B4F454D 	 .ascii "[OEM_DEMO] Interface ERROR!!!\000"
 359      5F44454D 
 359      4F5D2049 
 359      6E746572 
 359      66616365 
 360 003e 0000     	 .space 2
 361              	.LC6:
 362 0040 54696D65 	 .ascii "Timer1\000"
 362      723100
 363 0047 00       	 .space 1
 364              	.LC7:
 365 0048 73746172 	 .ascii "start timer 1 failed!\000"
ARM GAS   			page 10


 365      74207469 
 365      6D657220 
 365      31206661 
 365      696C6564 
 366 005e 0000     	 .space 2
 367              	.LC8:
 368 0060 616C6C20 	 .ascii "all initialization finished!\012\015\000"
 368      696E6974 
 368      69616C69 
 368      7A617469 
 368      6F6E2066 
 369              	 .section .rodata.vTimerCallback1.str1.4,"aMS",%progbits,1
 370              	 .align 2
 371              	.LC1:
 372 0000 54696D65 	 .ascii "TimerCallback1 triggered !\012\015\000"
 372      7243616C 
 372      6C626163 
 372      6B312074 
 372      72696767 
 373              	 .text
 374              	.Letext0:
 375              	 .file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 376              	 .file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 377              	 .file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 378              	 .file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 379              	 .file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 380              	 .file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 381              	 .file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 382              	 .file 9 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_common.h"
 383              	 .file 10 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_uart.h"
 384              	 .file 11 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_flash.h"
 385              	 .file 12 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/FreeRTOS/Source/include/FreeRTOSConfig.h"
 386              	 .file 13 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/FreeRTOS/Source/portable/GCC/mt2625/ARM_CM4F/portmacro.h"
 387              	 .file 14 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/FreeRTOS/Source/include/timers.h"
 388              	 .file 15 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_ril.h"
 389              	 .file 16 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/FreeRTOS/Source/include/task.h"
 390              	 .file 17 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_ril_cmds.h"
 391              	 .file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdio.h"
 392              	 .file 19 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_api.h"
 393              	 .file 20 "<built-in>"
ARM GAS   			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 gpsdemo.c
    {standard input}:18     .text.gps_callback:00000000 $t
    {standard input}:25     .text.gps_callback:00000000 gps_callback
    {standard input}:50     .text.gps_callback:00000010 $d
    {standard input}:55     .text.vTimerCallback1:00000000 $t
    {standard input}:62     .text.vTimerCallback1:00000000 vTimerCallback1
    {standard input}:84     .text.vTimerCallback1:00000010 $d
    {standard input}:89     .text.__io_puts:00000000 $t
    {standard input}:96     .text.__io_puts:00000000 __io_puts
    {standard input}:134    .text.__io_puts:0000001c $d
    {standard input}:139    .text.log_init:00000000 $t
    {standard input}:146    .text.log_init:00000000 log_init
    {standard input}:204    .text.log_init:00000040 $d
    {standard input}:211    .text.main:00000000 $t
    {standard input}:218    .text.main:00000000 main
    {standard input}:317    .text.main:00000074 $d
    {standard input}:341    .bss.xTimerHandle1:00000000 xTimerHandle1
    {standard input}:330    .bss.g_huart:00000000 $d
    {standard input}:334    .bss.g_huart:00000000 g_huart
    {standard input}:337    .bss.xTimerHandle1:00000000 $d
    {standard input}:344    .rodata.gps_callback.str1.4:00000000 $d
    {standard input}:348    .rodata.log_init.str1.4:00000000 $d
    {standard input}:355    .rodata.main.str1.4:00000000 $d
    {standard input}:370    .rodata.vTimerCallback1.str1.4:00000000 $d
                           .group:00000000 wm4.0.8fab1e1450c2b74bdd5e2aed4c325bf1
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
ARM GAS   			page 12


                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.gsdk_common.h.47.22de8ea3659fbd5af0e08ced1ae1b062
                           .group:00000000 wm4.gsdk_flash.h.25.4d08791083e4af07d64570151ac0803c
                           .group:00000000 wm4.app_loader.h.25.aa64c8d4536aca920728cda79a275eeb
                           .group:00000000 wm4.FreeRTOSConfig.h.68.1d0dd6b8cda279d0020827f5584733bd
                           .group:00000000 wm4.projdefs.h.71.1734cd3501e070360596dd847bb9d813
                           .group:00000000 wm4.portmacro.h.72.3d5d774f718d157a637f7eb960850f27
                           .group:00000000 wm4.portable.h.98.f435842f50d7864fba6a318a13e72513
                           .group:00000000 wm4.mpu_wrappers.h.71.dd245fe44d82bd40288b5a47f895c82c
                           .group:00000000 wm4.FreeRTOS.h.175.3abf49eaca38658a192da8d7c86d5374
                           .group:00000000 wm4.gsdk_ril.h.43.ec5a175e110d1c70143139b168262c34
                           .group:00000000 wm4.gsdk_ril_cmds.h.25.9576f30a39fa8fd69cc4f6c2fc4c8bd9
                           .group:00000000 wm4.queue.h.72.3695320c7600effec3d17b83c99d3c0b
                           .group:00000000 wm4.semphr.h.81.476996112f7cf2dd045dbdd37a9136bc
                           .group:00000000 wm4.list.h.103.6a12b7b9a7a136c3cca0ee53675c5498
                           .group:00000000 wm4.task.h.88.da474b04c368050657453c137d8efe45
                           .group:00000000 wm4.timers.h.96.b62a20effad09455c0ed06e5f17e2a48

UNDEFINED SYMBOLS
printf
gsdk_ril_get_gps
gsdk_uart_write
gsdk_uart_open
gsdk_syslog_printf
gsdk_ril_init
vTaskDelay
gsdk_ril_set_gps_operation
xTimerCreate
xTaskGetTickCount
xTimerGenericCommand
puts
