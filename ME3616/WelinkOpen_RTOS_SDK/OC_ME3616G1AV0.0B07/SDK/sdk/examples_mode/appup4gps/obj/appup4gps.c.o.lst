ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 28,1
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .file "appup4gps.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.__io_puts,"ax",%progbits
  18              	 .align 1
  19              	 .global __io_puts
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	__io_puts:
  26              	.LFB3:
  27              	 .file 1 "appup4gps.c"
   1:appup4gps.c   **** /*
   2:appup4gps.c   **** ** File   : appup4gps.c
   3:appup4gps.c   **** **
   4:appup4gps.c   **** *i* Copyright (C) 2013-2018 Gosuncn. All rights reserved.
   5:appup4gps.c   **** **
   6:appup4gps.c   **** ** Licensed under the Apache License, Version 2.0 (the "License");
   7:appup4gps.c   **** ** you may not use this file except in compliance with the License.
   8:appup4gps.c   **** ** You may obtain a copy of the License at
   9:appup4gps.c   **** **
  10:appup4gps.c   **** **      http://www.apache.org/licenses/LICENSE-2.0
  11:appup4gps.c   **** **
  12:appup4gps.c   **** ** Unless required by applicable law or agreed to in writing, software
  13:appup4gps.c   **** ** distributed under the License is distributed on an "AS IS" BASIS,
  14:appup4gps.c   **** ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:appup4gps.c   **** ** See the License for the specific language governing permissions and
  16:appup4gps.c   **** ** limitations under the License.
  17:appup4gps.c   **** **
  18:appup4gps.c   **** ** Author : dengyi2@gosuncn.cn
  19:appup4gps.c   **** ** 注意: 此demo仅适用于OpenCPU-G版本
  20:appup4gps.c   **** ** 注释: 此demo用于测试本地下载功能.执行demo后,重启系统即可
  21:appup4gps.c   **** **  $Date: 2018/06/15 09:40:36GMT+08:00 $
  22:appup4gps.c   **** **
  23:appup4gps.c   **** */
  24:appup4gps.c   **** 
  25:appup4gps.c   **** #include <stdio.h>
  26:appup4gps.c   **** #include <stdlib.h>
  27:appup4gps.c   **** #include <string.h>
  28:appup4gps.c   **** #include "gsdk_api.h"
  29:appup4gps.c   **** 
  30:appup4gps.c   **** #define APPUP_FLAGS_BASE    0x002B5800
  31:appup4gps.c   **** #define APPUP_ADDR          0x002B77F4
ARM GAS   			page 2


  32:appup4gps.c   **** #define APPFOTA_ADDR        0x002B67F4
  33:appup4gps.c   **** #define APPUP_FLAGS_SIZE    0x2000
  34:appup4gps.c   **** 
  35:appup4gps.c   **** static gsdk_handle_t g_huart;
  36:appup4gps.c   **** 
  37:appup4gps.c   **** int __io_puts(char *data, int len)
  38:appup4gps.c   **** {
  28              	 .loc 1 38 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B5     	 push {r4,lr}
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 4,-8
  36              	 .cfi_offset 14,-4
  37              	.LVL1:
  39:appup4gps.c   ****     int ret = 0;
  40:appup4gps.c   ****     if (g_huart) {
  38              	 .loc 1 40 0
  39 0002 064B     	 ldr r3,.L5
  40 0004 1C68     	 ldr r4,[r3]
  41 0006 3CB1     	 cbz r4,.L3
  42 0008 0A46     	 mov r2,r1
  43 000a 0146     	 mov r1,r0
  44              	.LVL2:
  41:appup4gps.c   ****         ret = gsdk_uart_write(g_huart, (uint8_t *)data, len, 1000);
  45              	 .loc 1 41 0
  46 000c 4FF47A73 	 mov r3,#1000
  47 0010 2046     	 mov r0,r4
  48              	.LVL3:
  49 0012 FFF7FEFF 	 bl gsdk_uart_write
  50              	.LVL4:
  51              	.L1:
  42:appup4gps.c   ****     }
  43:appup4gps.c   ****     return ret;
  44:appup4gps.c   **** }
  52              	 .loc 1 44 0
  53 0016 10BD     	 pop {r4,pc}
  54              	.LVL5:
  55              	.L3:
  39:appup4gps.c   ****     if (g_huart) {
  56              	 .loc 1 39 0
  57 0018 0020     	 movs r0,#0
  58              	.LVL6:
  43:appup4gps.c   **** }
  59              	 .loc 1 43 0
  60 001a FCE7     	 b .L1
  61              	.L6:
  62              	 .align 2
  63              	.L5:
  64 001c 00000000 	 .word .LANCHOR0
  65              	 .cfi_endproc
  66              	.LFE3:
  68              	 .section .text.log_init,"ax",%progbits
  69              	 .align 1
  70              	 .global log_init
ARM GAS   			page 3


  71              	 .syntax unified
  72              	 .thumb
  73              	 .thumb_func
  74              	 .fpu fpv4-sp-d16
  76              	log_init:
  77              	.LFB4:
  45:appup4gps.c   **** 
  46:appup4gps.c   **** int log_init(void)
  47:appup4gps.c   **** {
  78              	 .loc 1 47 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82 0000 00B5     	 push {lr}
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 14,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	 .cfi_def_cfa_offset 16
  48:appup4gps.c   ****     uart_config_t uart_config;
  49:appup4gps.c   ****     gsdk_status_t status;
  50:appup4gps.c   **** 
  51:appup4gps.c   ****     uart_config.baudrate    = UART_BAUDRATE_115200;
  87              	 .loc 1 51 0
  88 0004 0923     	 movs r3,#9
  89 0006 8DF80430 	 strb r3,[sp,#4]
  52:appup4gps.c   ****     uart_config.parity      = UART_PARITY_NONE;
  90              	 .loc 1 52 0
  91 000a 0020     	 movs r0,#0
  92 000c 8DF80700 	 strb r0,[sp,#7]
  53:appup4gps.c   ****     uart_config.stop_bit    = UART_STOP_BIT_1;
  93              	 .loc 1 53 0
  94 0010 8DF80600 	 strb r0,[sp,#6]
  54:appup4gps.c   ****     uart_config.word_length = UART_WORD_LENGTH_8;
  95              	 .loc 1 54 0
  96 0014 0323     	 movs r3,#3
  97 0016 8DF80530 	 strb r3,[sp,#5]
  55:appup4gps.c   **** 
  56:appup4gps.c   ****     status = gsdk_uart_open(UART_0, &uart_config, &g_huart);
  98              	 .loc 1 56 0
  99 001a 094A     	 ldr r2,.L12
 100 001c 01A9     	 add r1,sp,#4
 101 001e FFF7FEFF 	 bl gsdk_uart_open
 102              	.LVL7:
  57:appup4gps.c   ****     if (status != GSDK_SUCCESS) {
 103              	 .loc 1 57 0
 104 0022 30B9     	 cbnz r0,.L11
  58:appup4gps.c   ****         printf("[APPUP_DEMO]: failed to open uart %d\r\n", status);
  59:appup4gps.c   ****         return -1;
  60:appup4gps.c   ****     }
  61:appup4gps.c   **** 
  62:appup4gps.c   ****     printf("[APPUP_DEMO] log init....OK\r\n");
 105              	 .loc 1 62 0
 106 0024 0748     	 ldr r0,.L12+4
 107              	.LVL8:
 108 0026 FFF7FEFF 	 bl puts
 109              	.LVL9:
  63:appup4gps.c   **** 
ARM GAS   			page 4


  64:appup4gps.c   ****     return 0;
 110              	 .loc 1 64 0
 111 002a 0020     	 movs r0,#0
 112              	.L7:
  65:appup4gps.c   **** }
 113              	 .loc 1 65 0
 114 002c 03B0     	 add sp,sp,#12
 115              	 .cfi_remember_state
 116              	 .cfi_def_cfa_offset 4
 117              	 
 118 002e 5DF804FB 	 ldr pc,[sp],#4
 119              	.LVL10:
 120              	.L11:
 121              	 .cfi_restore_state
 122 0032 0146     	 mov r1,r0
  58:appup4gps.c   ****         printf("[APPUP_DEMO]: failed to open uart %d\r\n", status);
 123              	 .loc 1 58 0
 124 0034 0448     	 ldr r0,.L12+8
 125              	.LVL11:
 126 0036 FFF7FEFF 	 bl printf
 127              	.LVL12:
  59:appup4gps.c   ****     }
 128              	 .loc 1 59 0
 129 003a 4FF0FF30 	 mov r0,#-1
 130 003e F5E7     	 b .L7
 131              	.L13:
 132              	 .align 2
 133              	.L12:
 134 0040 00000000 	 .word .LANCHOR0
 135 0044 28000000 	 .word .LC1
 136 0048 00000000 	 .word .LC0
 137              	 .cfi_endproc
 138              	.LFE4:
 140              	 .section .text.main,"ax",%progbits
 141              	 .align 1
 142              	 .global main
 143              	 .syntax unified
 144              	 .thumb
 145              	 .thumb_func
 146              	 .fpu fpv4-sp-d16
 148              	main:
 149              	.LFB5:
  66:appup4gps.c   **** 
  67:appup4gps.c   **** static const char appup_flags_data[] = "0x1A2B3C4D";
  68:appup4gps.c   **** static const char appfota_flags_data[] = "0x4D3C2B1A";
  69:appup4gps.c   **** 
  70:appup4gps.c   **** int main(void)
  71:appup4gps.c   **** {
 150              	 .loc 1 71 0
 151              	 .cfi_startproc
 152              	 
 153              	 
 154 0000 10B5     	 push {r4,lr}
 155              	 .cfi_def_cfa_offset 8
 156              	 .cfi_offset 4,-8
 157              	 .cfi_offset 14,-4
 158 0002 88B0     	 sub sp,sp,#32
ARM GAS   			page 5


 159              	 .cfi_def_cfa_offset 40
  72:appup4gps.c   ****     char buf[sizeof(appup_flags_data)];
  73:appup4gps.c   ****     char buf1[sizeof(appfota_flags_data)];
  74:appup4gps.c   ****     gsdk_status_t status;
  75:appup4gps.c   ****     gsdk_handle_t hflash;
  76:appup4gps.c   **** 
  77:appup4gps.c   ****     log_init();
 160              	 .loc 1 77 0
 161 0004 FFF7FEFF 	 bl log_init
 162              	.LVL13:
  78:appup4gps.c   **** 
  79:appup4gps.c   ****     status = gsdk_flash_open(APPUP_FLAGS_BASE, APPUP_FLAGS_SIZE, &hflash);
 163              	 .loc 1 79 0
 164 0008 01AA     	 add r2,sp,#4
 165 000a 4FF40051 	 mov r1,#8192
 166 000e 2548     	 ldr r0,.L20
 167 0010 FFF7FEFF 	 bl gsdk_flash_open
 168              	.LVL14:
  80:appup4gps.c   ****     if (status != GSDK_SUCCESS)
 169              	 .loc 1 80 0
 170 0014 A8B9     	 cbnz r0,.L15
  81:appup4gps.c   ****         goto _fail;
  82:appup4gps.c   ****     status = gsdk_flash_write(hflash, APPUP_ADDR, (uint8_t *)appup_flags_data, sizeof(appup_flags_d
 171              	 .loc 1 82 0
 172 0016 0B23     	 movs r3,#11
 173 0018 234A     	 ldr r2,.L20+4
 174 001a 2449     	 ldr r1,.L20+8
 175 001c 0198     	 ldr r0,[sp,#4]
 176              	.LVL15:
 177 001e FFF7FEFF 	 bl gsdk_flash_write
 178              	.LVL16:
  83:appup4gps.c   ****     if (status != GSDK_SUCCESS)
 179              	 .loc 1 83 0
 180 0022 58B9     	 cbnz r0,.L16
  84:appup4gps.c   ****         goto _fail_close;
  85:appup4gps.c   ****     status = gsdk_flash_read(hflash, APPUP_ADDR, (uint8_t *)buf, sizeof(appup_flags_data));
 181              	 .loc 1 85 0
 182 0024 0B23     	 movs r3,#11
 183 0026 05AA     	 add r2,sp,#20
 184 0028 2049     	 ldr r1,.L20+8
 185 002a 0198     	 ldr r0,[sp,#4]
 186              	.LVL17:
 187 002c FFF7FEFF 	 bl gsdk_flash_read
 188              	.LVL18:
 189 0030 0446     	 mov r4,r0
 190              	.LVL19:
  86:appup4gps.c   ****     printf("appup flags: %s\n", buf);
 191              	 .loc 1 86 0
 192 0032 05A9     	 add r1,sp,#20
 193 0034 1E48     	 ldr r0,.L20+12
 194 0036 FFF7FEFF 	 bl printf
 195              	.LVL20:
  87:appup4gps.c   ****     if (status != GSDK_SUCCESS)
 196              	 .loc 1 87 0
 197 003a 44B1     	 cbz r4,.L19
 198              	.LVL21:
 199              	.L16:
ARM GAS   			page 6


  88:appup4gps.c   ****         goto _fail_close;
  89:appup4gps.c   ****     status = gsdk_flash_write(hflash, APPFOTA_ADDR, (uint8_t *)appfota_flags_data, sizeof(appfota_f
  90:appup4gps.c   ****     if (status != GSDK_SUCCESS)
  91:appup4gps.c   ****         goto _fail_close;
  92:appup4gps.c   ****     status = gsdk_flash_read(hflash, APPFOTA_ADDR, (uint8_t *)buf1, sizeof(appfota_flags_data));
  93:appup4gps.c   ****     printf("appfota flags: %s\n", buf1);
  94:appup4gps.c   ****     if (status != GSDK_SUCCESS)
  95:appup4gps.c   ****         goto _fail_close;
  96:appup4gps.c   **** 
  97:appup4gps.c   ****     if (strcmp(appup_flags_data, buf)) {
  98:appup4gps.c   ****         goto _fail_close;
  99:appup4gps.c   ****     }
 100:appup4gps.c   **** 
 101:appup4gps.c   ****     if (strcmp(appfota_flags_data, buf1)) {
 102:appup4gps.c   ****         goto _fail_close;
 103:appup4gps.c   ****     }
 104:appup4gps.c   ****     gsdk_flash_close(hflash);
 105:appup4gps.c   ****     printf("[APPUP_DEMO] pass!\n");
 106:appup4gps.c   ****     return -1;
 107:appup4gps.c   **** 
 108:appup4gps.c   **** _fail_close:
 109:appup4gps.c   ****     gsdk_flash_close(hflash);
 200              	 .loc 1 109 0
 201 003c 0198     	 ldr r0,[sp,#4]
 202 003e FFF7FEFF 	 bl gsdk_flash_close
 203              	.LVL22:
 204              	.L15:
 110:appup4gps.c   **** _fail:
 111:appup4gps.c   ****     printf("[APPUP_DEMO] failed!\n");
 205              	 .loc 1 111 0
 206 0042 1C48     	 ldr r0,.L20+16
 207 0044 FFF7FEFF 	 bl puts
 208              	.LVL23:
 112:appup4gps.c   **** 
 113:appup4gps.c   ****     return 0;
 209              	 .loc 1 113 0
 210 0048 0020     	 movs r0,#0
 211              	.L14:
 114:appup4gps.c   **** }
 212              	 .loc 1 114 0
 213 004a 08B0     	 add sp,sp,#32
 214              	 .cfi_remember_state
 215              	 .cfi_def_cfa_offset 8
 216              	 
 217 004c 10BD     	 pop {r4,pc}
 218              	.LVL24:
 219              	.L19:
 220              	 .cfi_restore_state
  89:appup4gps.c   ****     if (status != GSDK_SUCCESS)
 221              	 .loc 1 89 0
 222 004e 0B23     	 movs r3,#11
 223 0050 194A     	 ldr r2,.L20+20
 224 0052 1A49     	 ldr r1,.L20+24
 225 0054 0198     	 ldr r0,[sp,#4]
 226 0056 FFF7FEFF 	 bl gsdk_flash_write
 227              	.LVL25:
  90:appup4gps.c   ****         goto _fail_close;
ARM GAS   			page 7


 228              	 .loc 1 90 0
 229 005a 0028     	 cmp r0,#0
 230 005c EED1     	 bne .L16
  92:appup4gps.c   ****     printf("appfota flags: %s\n", buf1);
 231              	 .loc 1 92 0
 232 005e 0B23     	 movs r3,#11
 233 0060 02AA     	 add r2,sp,#8
 234 0062 1649     	 ldr r1,.L20+24
 235 0064 0198     	 ldr r0,[sp,#4]
 236              	.LVL26:
 237 0066 FFF7FEFF 	 bl gsdk_flash_read
 238              	.LVL27:
 239 006a 0446     	 mov r4,r0
 240              	.LVL28:
  93:appup4gps.c   ****     if (status != GSDK_SUCCESS)
 241              	 .loc 1 93 0
 242 006c 02A9     	 add r1,sp,#8
 243 006e 1448     	 ldr r0,.L20+28
 244 0070 FFF7FEFF 	 bl printf
 245              	.LVL29:
  94:appup4gps.c   ****         goto _fail_close;
 246              	 .loc 1 94 0
 247 0074 002C     	 cmp r4,#0
 248 0076 E1D1     	 bne .L16
  97:appup4gps.c   ****         goto _fail_close;
 249              	 .loc 1 97 0
 250 0078 05A9     	 add r1,sp,#20
 251 007a 0B48     	 ldr r0,.L20+4
 252 007c FFF7FEFF 	 bl strcmp
 253              	.LVL30:
 254 0080 0028     	 cmp r0,#0
 255 0082 DBD1     	 bne .L16
 101:appup4gps.c   ****         goto _fail_close;
 256              	 .loc 1 101 0
 257 0084 02A9     	 add r1,sp,#8
 258 0086 0C48     	 ldr r0,.L20+20
 259 0088 FFF7FEFF 	 bl strcmp
 260              	.LVL31:
 261 008c 0028     	 cmp r0,#0
 262 008e D5D1     	 bne .L16
 104:appup4gps.c   ****     printf("[APPUP_DEMO] pass!\n");
 263              	 .loc 1 104 0
 264 0090 0198     	 ldr r0,[sp,#4]
 265 0092 FFF7FEFF 	 bl gsdk_flash_close
 266              	.LVL32:
 105:appup4gps.c   ****     return -1;
 267              	 .loc 1 105 0
 268 0096 0B48     	 ldr r0,.L20+32
 269 0098 FFF7FEFF 	 bl puts
 270              	.LVL33:
 106:appup4gps.c   **** 
 271              	 .loc 1 106 0
 272 009c 4FF0FF30 	 mov r0,#-1
 273 00a0 D3E7     	 b .L14
 274              	.L21:
 275 00a2 00BF     	 .align 2
 276              	.L20:
ARM GAS   			page 8


 277 00a4 00582B00 	 .word 2840576
 278 00a8 00000000 	 .word .LANCHOR1
 279 00ac F4772B00 	 .word 2848756
 280 00b0 00000000 	 .word .LC2
 281 00b4 3C000000 	 .word .LC5
 282 00b8 00000000 	 .word .LANCHOR2
 283 00bc F4672B00 	 .word 2844660
 284 00c0 14000000 	 .word .LC3
 285 00c4 28000000 	 .word .LC4
 286              	 .cfi_endproc
 287              	.LFE5:
 289              	 .section .bss.g_huart,"aw",%nobits
 290              	 .align 2
 291              	 .set .LANCHOR0,.+0
 294              	g_huart:
 295 0000 00000000 	 .space 4
 296              	 .section .rodata.appfota_flags_data,"a",%progbits
 297              	 .align 2
 298              	 .set .LANCHOR2,.+0
 301              	appfota_flags_data:
 302 0000 30783444 	 .ascii "0x4D3C2B1A\000"
 302      33433242 
 302      314100
 303              	 .section .rodata.appup_flags_data,"a",%progbits
 304              	 .align 2
 305              	 .set .LANCHOR1,.+0
 308              	appup_flags_data:
 309 0000 30783141 	 .ascii "0x1A2B3C4D\000"
 309      32423343 
 309      344400
 310              	 .section .rodata.log_init.str1.4,"aMS",%progbits,1
 311              	 .align 2
 312              	.LC0:
 313 0000 5B415050 	 .ascii "[APPUP_DEMO]: failed to open uart %d\015\012\000"
 313      55505F44 
 313      454D4F5D 
 313      3A206661 
 313      696C6564 
 314 0027 00       	 .space 1
 315              	.LC1:
 316 0028 5B415050 	 .ascii "[APPUP_DEMO] log init....OK\015\000"
 316      55505F44 
 316      454D4F5D 
 316      206C6F67 
 316      20696E69 
 317              	 .section .rodata.main.str1.4,"aMS",%progbits,1
 318              	 .align 2
 319              	.LC2:
 320 0000 61707075 	 .ascii "appup flags: %s\012\000"
 320      7020666C 
 320      6167733A 
 320      2025730A 
 320      00
 321 0011 000000   	 .space 3
 322              	.LC3:
 323 0014 61707066 	 .ascii "appfota flags: %s\012\000"
 323      6F746120 
ARM GAS   			page 9


 323      666C6167 
 323      733A2025 
 323      730A00
 324 0027 00       	 .space 1
 325              	.LC4:
 326 0028 5B415050 	 .ascii "[APPUP_DEMO] pass!\000"
 326      55505F44 
 326      454D4F5D 
 326      20706173 
 326      732100
 327 003b 00       	 .space 1
 328              	.LC5:
 329 003c 5B415050 	 .ascii "[APPUP_DEMO] failed!\000"
 329      55505F44 
 329      454D4F5D 
 329      20666169 
 329      6C656421 
 330              	 .text
 331              	.Letext0:
 332              	 .file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 333              	 .file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 334              	 .file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 335              	 .file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 336              	 .file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 337              	 .file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 338              	 .file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 339              	 .file 9 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_common.h"
 340              	 .file 10 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_uart.h"
 341              	 .file 11 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_flash.h"
 342              	 .file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdio.h"
 343              	 .file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\string.h"
 344              	 .file 14 "<built-in>"
ARM GAS   			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 appup4gps.c
    {standard input}:18     .text.__io_puts:00000000 $t
    {standard input}:25     .text.__io_puts:00000000 __io_puts
    {standard input}:64     .text.__io_puts:0000001c $d
    {standard input}:69     .text.log_init:00000000 $t
    {standard input}:76     .text.log_init:00000000 log_init
    {standard input}:134    .text.log_init:00000040 $d
    {standard input}:141    .text.main:00000000 $t
    {standard input}:148    .text.main:00000000 main
    {standard input}:277    .text.main:000000a4 $d
    {standard input}:290    .bss.g_huart:00000000 $d
    {standard input}:294    .bss.g_huart:00000000 g_huart
    {standard input}:297    .rodata.appfota_flags_data:00000000 $d
    {standard input}:301    .rodata.appfota_flags_data:00000000 appfota_flags_data
    {standard input}:304    .rodata.appup_flags_data:00000000 $d
    {standard input}:308    .rodata.appup_flags_data:00000000 appup_flags_data
    {standard input}:311    .rodata.log_init.str1.4:00000000 $d
    {standard input}:318    .rodata.main.str1.4:00000000 $d
                           .group:00000000 wm4.0.8fab1e1450c2b74bdd5e2aed4c325bf1
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.gsdk_common.h.47.22de8ea3659fbd5af0e08ced1ae1b062
ARM GAS   			page 11


                           .group:00000000 wm4.gsdk_flash.h.25.4d08791083e4af07d64570151ac0803c
                           .group:00000000 wm4.app_loader.h.25.aa64c8d4536aca920728cda79a275eeb

UNDEFINED SYMBOLS
gsdk_uart_write
gsdk_uart_open
puts
printf
gsdk_flash_open
gsdk_flash_write
gsdk_flash_read
gsdk_flash_close
strcmp
