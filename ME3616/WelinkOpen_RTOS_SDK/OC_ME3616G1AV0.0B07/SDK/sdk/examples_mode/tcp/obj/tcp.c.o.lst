ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 28,1
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .file "tcp.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.__io_puts,"ax",%progbits
  18              	 .align 1
  19              	 .global __io_puts
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	__io_puts:
  26              	.LFB19:
  27              	 .file 1 "tcp.c"
   1:tcp.c         **** /*
   2:tcp.c         **** ** File   : tcp.c
   3:tcp.c         **** **
   4:tcp.c         **** ** Copyright (C) 2013-2018 Gosuncn. All rights reserved.
   5:tcp.c         **** **
   6:tcp.c         **** ** Licensed under the Apache License, Version 2.0 (the "License");
   7:tcp.c         **** ** you may not use this file except in compliance with the License.
   8:tcp.c         **** ** You may obtain a copy of the License at
   9:tcp.c         **** **
  10:tcp.c         **** **      http://www.apache.org/licenses/LICENSE-2.0
  11:tcp.c         **** **
  12:tcp.c         **** ** Unless required by applicable law or agreed to in writing, software
  13:tcp.c         **** ** distributed under the License is distributed on an "AS IS" BASIS,
  14:tcp.c         **** ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:tcp.c         **** ** See the License for the specific language governing permissions and
  16:tcp.c         **** ** limitations under the License.
  17:tcp.c         **** **
  18:tcp.c         **** ** Author : liyinhai@gosuncn.cn
  19:tcp.c         **** **
  20:tcp.c         **** **  $Date: 2018/03/16 08:45:36GMT+08:00 $
  21:tcp.c         **** **
  22:tcp.c         **** */
  23:tcp.c         **** 
  24:tcp.c         **** #include <stdio.h>
  25:tcp.c         **** #include <stdlib.h>
  26:tcp.c         **** #include <string.h>
  27:tcp.c         **** #include "gsdk_api.h"
  28:tcp.c         **** #include "lwip/sockets.h"
  29:tcp.c         **** #include "lwip/ip.h"
  30:tcp.c         **** 
  31:tcp.c         **** static gsdk_handle_t g_huart;
ARM GAS   			page 2


  32:tcp.c         **** 
  33:tcp.c         **** int __io_puts(char *data, int len)
  34:tcp.c         **** {
  28              	 .loc 1 34 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B5     	 push {r4,lr}
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 4,-8
  36              	 .cfi_offset 14,-4
  37              	.LVL1:
  35:tcp.c         ****     int ret = 0;
  36:tcp.c         ****     if (g_huart) {
  38              	 .loc 1 36 0
  39 0002 064B     	 ldr r3,.L5
  40 0004 1C68     	 ldr r4,[r3]
  41 0006 3CB1     	 cbz r4,.L3
  42 0008 0A46     	 mov r2,r1
  43 000a 0146     	 mov r1,r0
  44              	.LVL2:
  37:tcp.c         ****         ret = gsdk_uart_write(g_huart, (uint8_t *)data, len, 1000);
  45              	 .loc 1 37 0
  46 000c 4FF47A73 	 mov r3,#1000
  47 0010 2046     	 mov r0,r4
  48              	.LVL3:
  49 0012 FFF7FEFF 	 bl gsdk_uart_write
  50              	.LVL4:
  51              	.L1:
  38:tcp.c         ****     }
  39:tcp.c         ****     return ret;
  40:tcp.c         **** }
  52              	 .loc 1 40 0
  53 0016 10BD     	 pop {r4,pc}
  54              	.LVL5:
  55              	.L3:
  35:tcp.c         ****     if (g_huart) {
  56              	 .loc 1 35 0
  57 0018 0020     	 movs r0,#0
  58              	.LVL6:
  39:tcp.c         **** }
  59              	 .loc 1 39 0
  60 001a FCE7     	 b .L1
  61              	.L6:
  62              	 .align 2
  63              	.L5:
  64 001c 00000000 	 .word .LANCHOR0
  65              	 .cfi_endproc
  66              	.LFE19:
  68              	 .section .text.log_init,"ax",%progbits
  69              	 .align 1
  70              	 .global log_init
  71              	 .syntax unified
  72              	 .thumb
  73              	 .thumb_func
  74              	 .fpu fpv4-sp-d16
ARM GAS   			page 3


  76              	log_init:
  77              	.LFB20:
  41:tcp.c         **** 
  42:tcp.c         **** int log_init(void)
  43:tcp.c         **** {
  78              	 .loc 1 43 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82 0000 00B5     	 push {lr}
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 14,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	 .cfi_def_cfa_offset 16
  44:tcp.c         ****     uart_config_t uart_config;
  45:tcp.c         ****     gsdk_status_t status;
  46:tcp.c         **** 
  47:tcp.c         ****     uart_config.baudrate    = UART_BAUDRATE_115200;
  87              	 .loc 1 47 0
  88 0004 0923     	 movs r3,#9
  89 0006 8DF80430 	 strb r3,[sp,#4]
  48:tcp.c         ****     uart_config.parity      = UART_PARITY_NONE;
  90              	 .loc 1 48 0
  91 000a 0020     	 movs r0,#0
  92 000c 8DF80700 	 strb r0,[sp,#7]
  49:tcp.c         ****     uart_config.stop_bit    = UART_STOP_BIT_1;
  93              	 .loc 1 49 0
  94 0010 8DF80600 	 strb r0,[sp,#6]
  50:tcp.c         ****     uart_config.word_length = UART_WORD_LENGTH_8;
  95              	 .loc 1 50 0
  96 0014 0323     	 movs r3,#3
  97 0016 8DF80530 	 strb r3,[sp,#5]
  51:tcp.c         **** 
  52:tcp.c         ****     status = gsdk_uart_open(UART_0, &uart_config, &g_huart);
  98              	 .loc 1 52 0
  99 001a 094A     	 ldr r2,.L12
 100 001c 01A9     	 add r1,sp,#4
 101 001e FFF7FEFF 	 bl gsdk_uart_open
 102              	.LVL7:
  53:tcp.c         ****     if (status != GSDK_SUCCESS) {
 103              	 .loc 1 53 0
 104 0022 30B9     	 cbnz r0,.L11
  54:tcp.c         ****         gsdk_syslog_printf("[TCP_DEMO]: failed to open uart %d\n", status);
  55:tcp.c         ****         return -1;
  56:tcp.c         ****     }
  57:tcp.c         **** 
  58:tcp.c         ****     printf("[TCP_DEMO] log init....OK\r\n");
 105              	 .loc 1 58 0
 106 0024 0748     	 ldr r0,.L12+4
 107              	.LVL8:
 108 0026 FFF7FEFF 	 bl puts
 109              	.LVL9:
  59:tcp.c         **** 
  60:tcp.c         ****     return 0;
 110              	 .loc 1 60 0
 111 002a 0020     	 movs r0,#0
 112              	.L7:
ARM GAS   			page 4


  61:tcp.c         **** }
 113              	 .loc 1 61 0
 114 002c 03B0     	 add sp,sp,#12
 115              	 .cfi_remember_state
 116              	 .cfi_def_cfa_offset 4
 117              	 
 118 002e 5DF804FB 	 ldr pc,[sp],#4
 119              	.LVL10:
 120              	.L11:
 121              	 .cfi_restore_state
 122 0032 0146     	 mov r1,r0
  54:tcp.c         ****         gsdk_syslog_printf("[TCP_DEMO]: failed to open uart %d\n", status);
 123              	 .loc 1 54 0
 124 0034 0448     	 ldr r0,.L12+8
 125              	.LVL11:
 126 0036 FFF7FEFF 	 bl gsdk_syslog_printf
 127              	.LVL12:
  55:tcp.c         ****     }
 128              	 .loc 1 55 0
 129 003a 4FF0FF30 	 mov r0,#-1
 130 003e F5E7     	 b .L7
 131              	.L13:
 132              	 .align 2
 133              	.L12:
 134 0040 00000000 	 .word .LANCHOR0
 135 0044 24000000 	 .word .LC1
 136 0048 00000000 	 .word .LC0
 137              	 .cfi_endproc
 138              	.LFE20:
 140              	 .section .text.main,"ax",%progbits
 141              	 .align 1
 142              	 .global main
 143              	 .syntax unified
 144              	 .thumb
 145              	 .thumb_func
 146              	 .fpu fpv4-sp-d16
 148              	main:
 149              	.LFB21:
  62:tcp.c         **** 
  63:tcp.c         **** int main(void)
  64:tcp.c         **** {
 150              	 .loc 1 64 0
 151              	 .cfi_startproc
 152              	 
 153              	 
 154 0000 30B5     	 push {r4,r5,lr}
 155              	 .cfi_def_cfa_offset 12
 156              	 .cfi_offset 4,-12
 157              	 .cfi_offset 5,-8
 158              	 .cfi_offset 14,-4
 159 0002 ADF50B7D 	 sub sp,sp,#556
 160              	 .cfi_def_cfa_offset 568
 161              	.LVL13:
  65:tcp.c         ****     int s = 0;
  66:tcp.c         ****     int ret = 0;
  67:tcp.c         ****     char sendcontent[] = "GET / HTTP/1.0\r\n\r\n";
 162              	 .loc 1 67 0
ARM GAS   			page 5


 163 0006 85AC     	 add r4,sp,#532
 164 0008 2F4D     	 ldr r5,.L21
 165 000a 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 166 000c 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 167 000e 2B68     	 ldr r3,[r5]
 168 0010 24F8023B 	 strh r3,[r4],#2
 169 0014 1B0C     	 lsrs r3,r3,#16
 170 0016 2370     	 strb r3,[r4]
  68:tcp.c         ****     char srv_ip_addr[] = "114.55.56.19";
 171              	 .loc 1 68 0
 172 0018 2C4B     	 ldr r3,.L21+4
 173 001a 81AC     	 add r4,sp,#516
 174 001c 0FCB     	 ldm r3,{r0,r1,r2,r3}
 175 001e 07C4     	 stmia r4!,{r0,r1,r2}
 176 0020 2370     	 strb r3,[r4]
  69:tcp.c         ****     char recv_buf[500] = {0};
 177              	 .loc 1 69 0
 178 0022 4FF4FA72 	 mov r2,#500
 179 0026 0021     	 movs r1,#0
 180 0028 04A8     	 add r0,sp,#16
 181 002a FFF7FEFF 	 bl memset
 182              	.LVL14:
  70:tcp.c         **** 
  71:tcp.c         ****     log_init();
 183              	 .loc 1 71 0
 184 002e FFF7FEFF 	 bl log_init
 185              	.LVL15:
  72:tcp.c         **** 
  73:tcp.c         ****     s = socket(AF_INET, SOCK_STREAM, 0); //TCP socket
 186              	 .loc 1 73 0
 187 0032 0022     	 movs r2,#0
 188 0034 0121     	 movs r1,#1
 189 0036 0220     	 movs r0,#2
 190 0038 FFF7FEFF 	 bl lwip_socket
 191              	.LVL16:
  74:tcp.c         ****     if (0 > s) {
 192              	 .loc 1 74 0
 193 003c 051E     	 subs r5,r0,#0
 194 003e 36DB     	 blt .L19
  75:tcp.c         ****         gsdk_syslog_printf("Create Socket Error!");
  76:tcp.c         ****         return -1;
  77:tcp.c         ****     }
  78:tcp.c         ****     
  79:tcp.c         ****     struct sockaddr_in address;
  80:tcp.c         ****     address.sin_family = AF_INET;
 195              	 .loc 1 80 0
 196 0040 0223     	 movs r3,#2
 197 0042 8DF80130 	 strb r3,[sp,#1]
  81:tcp.c         ****     address.sin_addr.s_addr = inet_addr(srv_ip_addr);
 198              	 .loc 1 81 0
 199 0046 81A8     	 add r0,sp,#516
 200              	.LVL17:
 201 0048 FFF7FEFF 	 bl ipaddr_addr
 202              	.LVL18:
 203 004c 0190     	 str r0,[sp,#4]
  82:tcp.c         ****     address.sin_port = htons(80);
 204              	 .loc 1 82 0
ARM GAS   			page 6


 205 004e 5020     	 movs r0,#80
 206 0050 FFF7FEFF 	 bl lwip_htons
 207              	.LVL19:
 208 0054 ADF80200 	 strh r0,[sp,#2]
  83:tcp.c         **** 
  84:tcp.c         ****     if (0 > connect(s, (struct sockaddr *)&address, sizeof(address))) {
 209              	 .loc 1 84 0
 210 0058 1022     	 movs r2,#16
 211 005a 6946     	 mov r1,sp
 212 005c 2846     	 mov r0,r5
 213 005e FFF7FEFF 	 bl lwip_connect
 214              	.LVL20:
 215 0062 0028     	 cmp r0,#0
 216 0064 29DB     	 blt .L20
  85:tcp.c         ****         gsdk_syslog_printf("Can Not Connect To Server IP!\n");
  86:tcp.c         ****         return -1;
  87:tcp.c         ****     }
  88:tcp.c         ****     ret = send(s, sendcontent, strlen(sendcontent), 0);
 217              	 .loc 1 88 0
 218 0066 85A8     	 add r0,sp,#532
 219 0068 FFF7FEFF 	 bl strlen
 220              	.LVL21:
 221 006c 0023     	 movs r3,#0
 222 006e 0246     	 mov r2,r0
 223 0070 85A9     	 add r1,sp,#532
 224 0072 2846     	 mov r0,r5
 225 0074 FFF7FEFF 	 bl lwip_send
 226              	.LVL22:
 227 0078 0446     	 mov r4,r0
 228              	.LVL23:
  89:tcp.c         ****     gsdk_syslog_printf("send %d bytes data", ret);
 229              	 .loc 1 89 0
 230 007a 0146     	 mov r1,r0
 231 007c 1448     	 ldr r0,.L21+8
 232              	.LVL24:
 233 007e FFF7FEFF 	 bl gsdk_syslog_printf
 234              	.LVL25:
  90:tcp.c         ****     if (ret == -1) {
 235              	 .loc 1 90 0
 236 0082 B4F1FF3F 	 cmp r4,#-1
 237 0086 0ED0     	 beq .L14
 238              	.LVL26:
  91:tcp.c         ****         return -1;
  92:tcp.c         ****     }
  93:tcp.c         ****     ret = 0;
  94:tcp.c         ****     ret = recv(s, recv_buf, 500, 0);
 239              	 .loc 1 94 0
 240 0088 0023     	 movs r3,#0
 241 008a 4FF4FA72 	 mov r2,#500
 242 008e 04A9     	 add r1,sp,#16
 243 0090 2846     	 mov r0,r5
 244 0092 FFF7FEFF 	 bl lwip_recv
 245              	.LVL27:
  95:tcp.c         ****     gsdk_syslog_printf("recv %d bytes data", ret);
 246              	 .loc 1 95 0
 247 0096 0146     	 mov r1,r0
 248 0098 0E48     	 ldr r0,.L21+12
ARM GAS   			page 7


 249              	.LVL28:
 250 009a FFF7FEFF 	 bl gsdk_syslog_printf
 251              	.LVL29:
  96:tcp.c         ****     close(s);
 252              	 .loc 1 96 0
 253 009e 2846     	 mov r0,r5
 254 00a0 FFF7FEFF 	 bl lwip_close
 255              	.LVL30:
  97:tcp.c         ****     return 0;
 256              	 .loc 1 97 0
 257 00a4 0024     	 movs r4,#0
 258              	.L14:
  98:tcp.c         **** }
 259              	 .loc 1 98 0
 260 00a6 2046     	 mov r0,r4
 261 00a8 0DF50B7D 	 add sp,sp,#556
 262              	 .cfi_remember_state
 263              	 .cfi_def_cfa_offset 12
 264              	 
 265 00ac 30BD     	 pop {r4,r5,pc}
 266              	.LVL31:
 267              	.L19:
 268              	 .cfi_restore_state
  75:tcp.c         ****         return -1;
 269              	 .loc 1 75 0
 270 00ae 0A48     	 ldr r0,.L21+16
 271              	.LVL32:
 272 00b0 FFF7FEFF 	 bl gsdk_syslog_printf
 273              	.LVL33:
  76:tcp.c         ****     }
 274              	 .loc 1 76 0
 275 00b4 4FF0FF34 	 mov r4,#-1
 276 00b8 F5E7     	 b .L14
 277              	.L20:
  85:tcp.c         ****         return -1;
 278              	 .loc 1 85 0
 279 00ba 0848     	 ldr r0,.L21+20
 280 00bc FFF7FEFF 	 bl gsdk_syslog_printf
 281              	.LVL34:
  86:tcp.c         ****     }
 282              	 .loc 1 86 0
 283 00c0 4FF0FF34 	 mov r4,#-1
 284 00c4 EFE7     	 b .L14
 285              	.L22:
 286 00c6 00BF     	 .align 2
 287              	.L21:
 288 00c8 60000000 	 .word .LC2
 289 00cc 74000000 	 .word .LC3
 290 00d0 38000000 	 .word .LC6
 291 00d4 4C000000 	 .word .LC7
 292 00d8 00000000 	 .word .LC4
 293 00dc 18000000 	 .word .LC5
 294              	 .cfi_endproc
 295              	.LFE21:
 297              	 .section .bss.g_huart,"aw",%nobits
 298              	 .align 2
 299              	 .set .LANCHOR0,.+0
ARM GAS   			page 8


 302              	g_huart:
 303 0000 00000000 	 .space 4
 304              	 .section .rodata.log_init.str1.4,"aMS",%progbits,1
 305              	 .align 2
 306              	.LC0:
 307 0000 5B544350 	 .ascii "[TCP_DEMO]: failed to open uart %d\012\000"
 307      5F44454D 
 307      4F5D3A20 
 307      6661696C 
 307      65642074 
 308              	.LC1:
 309 0024 5B544350 	 .ascii "[TCP_DEMO] log init....OK\015\000"
 309      5F44454D 
 309      4F5D206C 
 309      6F672069 
 309      6E69742E 
 310              	 .section .rodata.main.str1.4,"aMS",%progbits,1
 311              	 .align 2
 312              	.LC4:
 313 0000 43726561 	 .ascii "Create Socket Error!\000"
 313      74652053 
 313      6F636B65 
 313      74204572 
 313      726F7221 
 314 0015 000000   	 .space 3
 315              	.LC5:
 316 0018 43616E20 	 .ascii "Can Not Connect To Server IP!\012\000"
 316      4E6F7420 
 316      436F6E6E 
 316      65637420 
 316      546F2053 
 317 0037 00       	 .space 1
 318              	.LC6:
 319 0038 73656E64 	 .ascii "send %d bytes data\000"
 319      20256420 
 319      62797465 
 319      73206461 
 319      746100
 320 004b 00       	 .space 1
 321              	.LC7:
 322 004c 72656376 	 .ascii "recv %d bytes data\000"
 322      20256420 
 322      62797465 
 322      73206461 
 322      746100
 323 005f 00       	 .space 1
 324              	.LC2:
 325 0060 47455420 	 .ascii "GET / HTTP/1.0\015\012\015\012\000"
 325      2F204854 
 325      54502F31 
 325      2E300D0A 
 325      0D0A00
 326 0073 00       	 .space 1
 327              	.LC3:
 328 0074 3131342E 	 .ascii "114.55.56.19\000"
 328      35352E35 
 328      362E3139 
ARM GAS   			page 9


 328      00
 329              	 .text
 330              	.Letext0:
 331              	 .file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 332              	 .file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 333              	 .file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 334              	 .file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 335              	 .file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 336              	 .file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 337              	 .file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\types.h"
 338              	 .file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 339              	 .file 10 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_common.h"
 340              	 .file 11 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_uart.h"
 341              	 .file 12 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_flash.h"
 342              	 .file 13 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/FreeRTOS/Source/include/FreeRTOSConfig.h"
 343              	 .file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\errno.h"
 344              	 .file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\time.h"
 345              	 .file 16 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/ports/include/arch/cc.h"
 346              	 .file 17 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip4_addr.h"
 347              	 .file 18 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip6_addr.h"
 348              	 .file 19 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip_addr.h"
 349              	 .file 20 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/err.h"
 350              	 .file 21 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/pbuf.h"
 351              	 .file 22 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/netif.h"
 352              	 .file 23 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/inet.h"
 353              	 .file 24 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/sockets.h"
 354              	 .file 25 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip4.h"
 355              	 .file 26 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip6.h"
 356              	 .file 27 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/ip.h"
 357              	 .file 28 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/lwip/src/include/lwip/def.h"
 358              	 .file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\string.h"
 359              	 .file 30 "E:/01\271\244\327\367\304\277\302\274/WelinkOpen_RTOS_SDK/OC_ME3616G1AV0.0B07/SDK/sdk/include/gsdk_api.h"
 360              	 .file 31 "<built-in>"
ARM GAS   			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 tcp.c
    {standard input}:18     .text.__io_puts:00000000 $t
    {standard input}:25     .text.__io_puts:00000000 __io_puts
    {standard input}:64     .text.__io_puts:0000001c $d
    {standard input}:69     .text.log_init:00000000 $t
    {standard input}:76     .text.log_init:00000000 log_init
    {standard input}:134    .text.log_init:00000040 $d
    {standard input}:141    .text.main:00000000 $t
    {standard input}:148    .text.main:00000000 main
    {standard input}:288    .text.main:000000c8 $d
    {standard input}:298    .bss.g_huart:00000000 $d
    {standard input}:302    .bss.g_huart:00000000 g_huart
    {standard input}:305    .rodata.log_init.str1.4:00000000 $d
    {standard input}:311    .rodata.main.str1.4:00000000 $d
                           .group:00000000 wm4.0.8fab1e1450c2b74bdd5e2aed4c325bf1
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.gsdk_common.h.47.22de8ea3659fbd5af0e08ced1ae1b062
                           .group:00000000 wm4.gsdk_flash.h.25.4d08791083e4af07d64570151ac0803c
                           .group:00000000 wm4.app_loader.h.25.aa64c8d4536aca920728cda79a275eeb
                           .group:00000000 wm4.FreeRTOSConfig.h.68.1d0dd6b8cda279d0020827f5584733bd
                           .group:00000000 wm4.lwipopts.h.39.6b59604adf87dc94bbbda24564503740
ARM GAS   			page 11


                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:00000000 wm4.time.h.38.20beed93add9f31905d3a626e4660be9
                           .group:00000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.483ee9b7e27a5dcca3d222ded0e25e01
                           .group:00000000 wm4.cc.h.48.d6d2c2bb4a8eeb217c55b9ca1943b7a0
                           .group:00000000 wm4.arch.h.65.8829bb52e9eb86f038bc22f28844c005
                           .group:00000000 wm4.debug.h.44.85dd174371aa97df303e04153d799135
                           .group:00000000 wm4.opt.h.77.035e4f6feedd8c96216e0818f09a9265
                           .group:00000000 wm4.def.h.33.687716bada84b2810fdf97c9d167aeeb
                           .group:00000000 wm4.ip4_addr.h.33.1a8b96da9c9099dd4d4b421392c24416
                           .group:00000000 wm4.ip6_addr.h.43.f0356dc1c9eb4011a6824b272ca0bdec
                           .group:00000000 wm4.ip_addr.h.58.d7bcbad6cfa9a793708e54980ac1c34d
                           .group:00000000 wm4.netif.h.33.379f236f9670aafd30086e50d1a89f89
                           .group:00000000 wm4.err.h.33.f97d15a7862198a77a6b19a8b190fee7
                           .group:00000000 wm4.pbuf.h.34.202868ef9162d4cb74cfc854b7b74f63
                           .group:00000000 wm4.netif.h.67.da8672002bd78982c4ab50b84285a595
                           .group:00000000 wm4.inet.h.41.0cf9f502d748021afadf1fe4fba638f4
                           .group:00000000 wm4.sockets.h.72.bc82e899e862bc38df9aee17d977f9be
                           .group:00000000 wm4.ip4.h.33.2db1e45313b1f472e08d288657c61499
                           .group:00000000 wm4.ip6.h.42.4c9fe14607f20e2a534215f8047124e1
                           .group:00000000 wm4.ip.h.49.1a1fbae54cafc9b96064363517198239

UNDEFINED SYMBOLS
gsdk_uart_write
gsdk_uart_open
puts
gsdk_syslog_printf
memset
lwip_socket
ipaddr_addr
lwip_htons
lwip_connect
strlen
lwip_send
lwip_recv
lwip_close
